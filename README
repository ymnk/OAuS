OAuS is an implementation of OAuth[1] client in Scala.

[1] http://www.rfc-editor.org/rfc/rfc5849.txt

How To Use
==========
  /* Using java.net.HttpURLConnection */

  val url = new URL("http://example.com/foo")
  val urlConn = new URL(url).openConnection.asInstanceOf[HttpURLConnection]
 
  import com.jcraft.oaus.OAuthClient
  valoc = new OAuthClient(CONSUMER_KEY, CONSUMER_SECRET)
  oc.signGetRequest(rul, ACCESS_TOKEN, TOKEN_SECRET) {
    (k, v) => urlConn.setRequestProperty(k, v)
  }

  urlConn.connect
  urlConn.getReponseCode

  /*****/

  val url = new URL("http://example.com/foo")
  val urlConn = new URL(url).openConnection.asInstanceOf[HttpURLConnection]
  urlConn.setRequestMethod("POST")     
  urlConn.setDoOutput(true);

  val data = "foo=1&bar=2"

  import com.jcraft.oaus.OAuthClient
  valoc = new OAuthClient(CONSUMER_KEY, CONSUMER_SECRET)
  oc.signGetRequest(rul, data, ACCESS_TOKEN, TOKEN_SECRET) {
    (k, v) => urlConn.setRequestProperty(k, v)
  }

  val writer = new java.io.PrintWriter(urlConn.getOutputStream)
  writer.print(data)
  writer.close()

  urlConn.connect
  urlConn.getReponseCode

  /*****/

  /* using commons-httpclient */

  import com.jcraft.oaus._
  import org.apache.commons.httpclient._
  import org.apache.commons.httpclient.methods._

  val url = "http://api.twitter.com/1/statuses/update.xml"
  val client = new HttpClient
  val method = new PostMethod(url)

  val tweet = "Hello "+(new java.util.Date)

  method.addParameter("status", tweet);

  val oc = new OAuthClient(CONSUMER_KEY, CONSUMER_SECRET)
  oc.signGetRequest(url, 
                    "status="+tweet, 
                    ACCESS_TOKEN, TOKEN_SECRET) {
    method.setRequestHeader(_, _)
  }

  println(clinet.executeMethod(method))
  println(xml.XML.load(method.getResponseBodyAsStream))

  method.releaseConnection
